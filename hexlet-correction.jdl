application {
    config {
        baseName hexletCorrection,
        packageName io.hexlet.hexletcorrection,
        applicationType monolith,
        buildTool maven,
        authenticationType jwt,
        databaseType sql
        prodDatabaseType postgresql,
        devDatabaseType postgresql,
        cacheProvider ehcache,
        clientFramework react,
        testFrameworks [cucumber]
        nativeLanguage en,
        languages [en, ru],
    }
    entities all
}

service all with serviceImpl
paginate all with pagination
dto all with mapstruct
filter all
noFluentMethod all

entity Preference {
    avatar ImageBlob
}

REMARK_LENGTH_MAX = 1000
OFFSET_CORRECTION_LENGTH_MAX = 100
TEXT_CORRECTION_LENGTH_MAX = 100
NAME_LENGTH_MIN = 1
NAME_LENGTH_MAX = 50
PAGE_URL_LENGTH_MAX = 50

entity Correction {
    reporterRemark String maxlength(REMARK_LENGTH_MAX)
    correcterRemark String maxlength(REMARK_LENGTH_MAX)
    resolverRemark String maxlength(REMARK_LENGTH_MAX)
    textBeforeCorrection String maxlength(OFFSET_CORRECTION_LENGTH_MAX)
    textCorrection String required maxlength(TEXT_CORRECTION_LENGTH_MAX)
    textAfterCorrection String maxlength(OFFSET_CORRECTION_LENGTH_MAX)
    reporterName String required minlength(NAME_LENGTH_MIN) maxlength(NAME_LENGTH_MAX)
    pageURL String required maxlength(PAGE_URL_LENGTH_MAX)
    correctionStatus CorrectionStatus required
}

enum CorrectionStatus {
    REPORTED, IN_PROGRESS, RESOLVED, CANCELED
}

COMMENT_MESSAGE_LENGTH_MAX = 200

entity Comment {
    message String required maxlength(COMMENT_MESSAGE_LENGTH_MAX)
    date ZonedDateTime required
}

relationship OneToMany {
    Preference{correctionsInProgress} to Correction{correcter}
    Preference{resolvedCorrections} to Correction{resolver}
    Preference{comments} to Comment{author}
    Correction{comments} to Comment{correction}
}

relationship OneToOne {
    Preference{user(id)} to User with jpaDerivedIdentifier
}
